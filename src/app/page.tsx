'use client';

import { useState, useEffect, Suspense } from 'react';
import { useSearchParams } from 'next/navigation';
import PageHeader from '@/components/PageHeader';
import SearchInput from '@/components/SearchInput';
import MenuCard from '@/components/MenuCard';
import Skeleton from '@/components/Skeleton';
import { MAIN_SECTIONS } from '@/data/content';

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const CATEGORY_ICONS = {
  '–° –ß–ï–ì–û –ù–ê–ß–ê–¢–¨ –ù–û–í–ò–ß–ö–£': 'üèÅ',
  '–ü–û–õ–ï–ó–ù–´–ï –õ–ê–ô–§–•–ê–ö–ò –í –ü–õ–ï–¢–ï–ù–ò–ò': 'üí°',
  '–ü–†–ê–ö–¢–ò–ö–ê': 'üñêÔ∏è',
  '–ú–ö –ò –°–ö–ò–î–ö–ò –£–ß–ê–°–¢–ù–ò–ö–ê–ú –ì–†–£–ü–ü–´': 'üéì',
  '–¢–£–¢–û–†–ò–ê–õ–´ –ù–ê –°–ï–ë–ï': 'üìπ',
  '–°–ï–ö–†–ï–¢–ù–´–ï –ú–ê–¢–ï–†–ò–ê–õ–´': 'üîí',
};

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const CATEGORY_ROUTES = {
  '–° –ß–ï–ì–û –ù–ê–ß–ê–¢–¨ –ù–û–í–ò–ß–ö–£': '/category/beginner',
  '–ü–û–õ–ï–ó–ù–´–ï –õ–ê–ô–§–•–ê–ö–ò –í –ü–õ–ï–¢–ï–ù–ò–ò': '/category/lifehacks',
  '–ü–†–ê–ö–¢–ò–ö–ê': '/category/practice',
  '–ú–ö –ò –°–ö–ò–î–ö–ò –£–ß–ê–°–¢–ù–ò–ö–ê–ú –ì–†–£–ü–ü–´': '/category/courses',
  '–¢–£–¢–û–†–ò–ê–õ–´ –ù–ê –°–ï–ë–ï': '/category/tutorials',
  '–°–ï–ö–†–ï–¢–ù–´–ï –ú–ê–¢–ï–†–ò–ê–õ–´': '/category/secrets',
};

function HomePageContent() {
  const [filteredSections, setFilteredSections] = useState(MAIN_SECTIONS);
  const searchParams = useSearchParams();

  useEffect(() => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ startapp
    const startapp = searchParams.get('startapp');
    if (startapp === 'useful') {
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–æ–ª–µ–∑–Ω–æ–µ
      window.location.href = '/useful';
    }
  }, [searchParams]);

  const handleSearch = (query: string) => {
    if (!query.trim()) {
      setFilteredSections(MAIN_SECTIONS);
      return;
    }

    const filtered = MAIN_SECTIONS.map(section => ({
      ...section,
      items: section.items.filter(item =>
        item.label.toLowerCase().includes(query.toLowerCase())
      )
    })).filter(section => section.items.length > 0);

    setFilteredSections(filtered);
  };

  return (
    <div className="container mx-auto px-4 py-6">
      <PageHeader 
        title="Braid Mania" 
        subtitle="–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–ª–µ—Ç–µ–Ω–∏—é –∫–æ—Å–∏—á–µ–∫ –∏ –±—Ä–µ–π–¥–∏–Ω–≥—É" 
      />
      
      <SearchInput onSearch={handleSearch} />
      
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        {filteredSections.map((section, index) => (
          <MenuCard
            key={index}
            title={section.title}
            count={section.items.length}
            icon={CATEGORY_ICONS[section.title as keyof typeof CATEGORY_ICONS] || 'üìÅ'}
            route={CATEGORY_ROUTES[section.title as keyof typeof CATEGORY_ROUTES] || '/category/default'}
          />
        ))}
      </div>
      
      {filteredSections.length === 0 && (
        <div className="text-center py-12">
          <p className="text-text-secondary text-lg">
            –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
          </p>
        </div>
      )}
    </div>
  );
}

export default function HomePage() {
  return (
    <Suspense fallback={
      <div className="container mx-auto px-4 py-6">
        <PageHeader title="Braid Mania" subtitle="–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤..." />
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          {[1, 2, 3, 4, 5, 6].map((i) => (
            <Skeleton key={i} className="h-32" />
          ))}
        </div>
      </div>
    }>
      <HomePageContent />
    </Suspense>
  );
}
